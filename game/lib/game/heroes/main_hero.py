import pygame
import os
import json
from lib.game.heroes.hero import Hero
from math import fabs

main_hero_config = None
main_hero_config_dir = "lib/config/heroes/main_hero_config.json"
file_exists = os.path.isfile(main_hero_config_dir)
if file_exists:
    with open(main_hero_config_dir) as json_file:
        main_hero_config = json.load(json_file)
BASE_SPEED = main_hero_config['baseSpeed'] if main_hero_config is not None else 300
SPRITE_AMOUNT_VERTICAL = 3
SPRITE_AMOUNT_HORIZONTAL = 5
SPRITE_CHANGE_DELTA_TIME = 100

right_sprite = [pygame.image.load('config/assets/main_hero_run_right_0.png'),
                pygame.image.load('config/assets/main_hero_run_right_1.png'),
                pygame.image.load('config/assets/main_hero_run_right_2.png'),
                pygame.image.load('config/assets/main_hero_run_right_3.png'),
                pygame.image.load('config/assets/main_hero_run_right_4.png'),
                pygame.image.load('config/assets/main_hero_run_right_5.png')]

down_sprite = [pygame.image.load('config/assets/main_hero_run_down_0.png'),
               pygame.image.load('config/assets/main_hero_run_down_1.png'),
               pygame.image.load('config/assets/main_hero_run_down_2.png'),
               pygame.image.load('config/assets/main_hero_run_down_3.png')]

left_sprite = [pygame.image.load('config/assets/main_hero_run_left_0.png'),
               pygame.image.load('config/assets/main_hero_run_left_1.png'),
               pygame.image.load('config/assets/main_hero_run_left_2.png'),
               pygame.image.load('config/assets/main_hero_run_left_3.png'),
               pygame.image.load('config/assets/main_hero_run_left_4.png'),
               pygame.image.load('config/assets/main_hero_run_left_5.png')]

up_sprite = [pygame.image.load('config/assets/main_hero_run_up_0.png'),
             pygame.image.load('config/assets/main_hero_run_up_1.png'),
             pygame.image.load('config/assets/main_hero_run_up_2.png'),
             pygame.image.load('config/assets/main_hero_run_up_3.png')]


class MainHero(Hero):

    __movement_left = False
    __movement_right = False
    __movement_up = False
    __movement_down = False
    __move_count = 0
    __last_update_time = 0

    def __init__(self, game):
        self.__character = pygame.image.load('config/assets/main_hero.png')
        self.__move_speed = BASE_SPEED
        self.__position_x = 0  # Value only for testing purposes, will be generated by server
        self.__position_y = 0  # Value only for testing purposes, will be generated by server
        self.__game = game

        self.__delta_time = 0
        self.__start = 0
        self.__end = 0
        self.__flag = False

        self.__standing = "right"

    def get_character(self):
        return self.__character

    def get_move_speed(self):
        return self.__move_speed

    def update_position(self, horizontal_speed, vertical_speed):
        self.__position_x += horizontal_speed
        self.__position_y += vertical_speed

    def get_sprite(self):
        actual_time = pygame.time.get_ticks()
        if fabs(actual_time - self.__last_update_time) >= SPRITE_CHANGE_DELTA_TIME:
            self.__move_count += 1
            self.__last_update_time = actual_time

        if self.__movement_left:
            sprite = left_sprite[self.__move_count % SPRITE_AMOUNT_HORIZONTAL]
        elif self.__movement_right:
            sprite = right_sprite[self.__move_count % SPRITE_AMOUNT_HORIZONTAL]
        elif self.__movement_up:
            sprite = up_sprite[self.__move_count % SPRITE_AMOUNT_VERTICAL]
        elif self.__movement_down:
            sprite = down_sprite[self.__move_count % SPRITE_AMOUNT_VERTICAL]
        else:
            sprite = self.set_standing_sprite()

        return sprite

    def reset_direction(self, direction):
        if direction == pygame.K_d:
            self.__movement_right = False
            self.__standing = "right"
        if direction == pygame.K_a:
            self.__movement_left = False
            self.__standing = "left"
        if direction == pygame.K_s:
            self.__movement_down = False
            self.__standing = "down"
        if direction == pygame.K_w:
            self.__movement_up = False
            self.__standing = "up"
        self.__move_count = 0

    def set_movement_right(self):
        self.__movement_left = False
        self.__movement_right = True

    def set_movement_left(self):
        self.__movement_right = False
        self.__movement_left = True

    def set_movement_up(self):
        self.__movement_up = True
        self.__movement_down = False

    def set_movement_down(self):
        self.__movement_down = True
        self.__movement_up = False

    def set_standing_sprite(self):
        if self.__standing == "left":
            return left_sprite[0]
        if self.__standing == "right":
            return right_sprite[0]
        if self.__standing == "up":
            return up_sprite[0]
        if self.__standing == "down":
            return down_sprite[0]

    def get_x(self):
        return self.__position_x

    def get_y(self):
        return self.__position_y
